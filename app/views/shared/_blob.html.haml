-# at least one of `head_*` locals is required, as well as `body`
:ruby
  if !local_assigns[:head].present?
    heads = [:head_left, :head_center, :head_right].map { |v| local_assigns[v].present? ? 1 : 0 }.inject :+
    width = heads.zero? ? 0 : 12 / heads # always an integer since 1,2,3 all divide 12
  end
  panel_id = 0 unless local_assigns[:panel_id].present?
  body_locals = {} unless local_assigns[:body_locals].present?
  footer_locals = {} unless local_assigns[:footer_locals].present?
  head_class = '' unless local_assigns[:head_class].present?
  open = false unless local_assigns[:open].present?

.panel-group{ id: panel_id }
  .panel.panel-default{ class: head_class }
    .blob-link{ 'data-toggle' => 'collapse', href: "#collapse#{panel_id}" }
      .panel-heading{ class: head_class }
        - if local_assigns[:head].present?
          = render partial: head, locals: { open: open }.merge!(head_locals)
        - else
          .row
            - if local_assigns[:head_left].present?
              %div{ class: "col-xs-#{width}" }
                - if local_assigns[:head_icon]
                  %div{ class: head_icon }
                = head_left
            - if local_assigns[:head_center].present?
              %div{ class: "col-xs-#{width} text-center" }
                = head_center
            - if local_assigns[:head_right].present?
              %div{ class: "col-xs-#{width} text-right" }
                = head_right
    .panel-collapse.collapse.blob-collapse{ id: "collapse#{panel_id}", class: (open ? 'in' : '') }
      .panel-body
        = render partial: body, locals: body_locals
      - if local_assigns[:footer].present?
        .panel-footer
          = render partial: footer, locals: footer_locals
